
R version 3.5.2 (2018-12-20) -- "Eggshell Igloo"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> ## path <- "P:/Cluster/LVMproject/article-smallSampleInference"
> ## setwd(path)
> ## source("BATCH_illustration-factorModel.R")
> 
> rm(list = ls())
> gc()
          used (Mb) gc trigger  (Mb) max used (Mb)
Ncells 1322857 70.7    2850111 152.3  1503844 80.4
Vcells 2264919 17.3    8388608  64.0  4438666 33.9
> 
> ## * seed
> iter_sim <- as.numeric(Sys.getenv("SGE_TASK_ID"))
> n.iter_sim <- as.numeric(Sys.getenv("SGE_TASK_LAST"))
> if(is.na(iter_sim)){iter_sim <- 14}
> if(is.na(n.iter_sim)){n.iter_sim <- 40}
> cat("iteration ",iter_sim," over ",n.iter_sim,"\n",sep="")
iteration 40 over 40
> 
> set.seed(3)
> seqSeed <- sample(1:max(1e5,n.iter_sim),size=n.iter_sim,replace=FALSE)
> iSeed <- seqSeed[iter_sim]
> set.seed(iSeed)
> 
> cat("seed: ",iSeed,"\n",sep="")
seed: 20756
> 
> ## * path
> path <- "."
> path.res <- file.path(path,"Results","illustration-factorModel")
> if(dir.exists(path.res)==FALSE){
+     dir.create(path.res)
+ }
> path.output <- file.path(path,"output","illustration-factorModel")
> if(dir.exists(path.output)==FALSE){
+     dir.create(path.output)
+ }
> 
> ## * libraries
> library(lava)
> library(data.table)
> ## devtools::load_all("lavaSearch2")
> library(lavaSearch2)
Loading required package: ggplot2

Attaching package: ‘ggplot2’

The following object is masked from ‘package:lava’:

    vars

lavaSearch2 version 1.5.3
> 
> ## * settings
> seqN <- c(73)
> n.boot <- 0
> n.rep <- 5e2 * 3
> 
> ## * model
> 
> ## ** generative model
> m.generative <- lvm(neo ~ u + httlpr2 + scanner,
+                     cau ~ u + age0 + scanner,
+                     put ~ u + scanner,
+                     hip ~ u + scanner,
+                     amy ~ u + scanner,
+                     u ~ age0 + gender + bdnf2 + bmi0 + inj0)
> latent(m.generative) <- ~u
> covariance(m.generative) <- cau ~ put
> covariance(m.generative) <- amy ~ hip
> distribution(m.generative, ~scanner) <- lava::binomial.lvm(p=0.6575)
> distribution(m.generative, ~gender) <- lava::binomial.lvm(p=0.7671)
> distribution(m.generative, ~bdnf2) <- lava::binomial.lvm(p=0.5753)
> distribution(m.generative, ~httlpr2) <- lava::binomial.lvm(p=0.5890)
> distribution(m.generative, ~age0) <- lava::gaussian.lvm(sd=16.09)
> distribution(m.generative, ~inj0) <- lava::gaussian.lvm(sd=2.479)
> distribution(m.generative, ~bmi0) <- lava::gaussian.lvm(sd=0.02276)
> transform(m.generative, cimbi.id~u) <- function(x){
+     vec.id <- c(10753, 11074, 11131, 30006, 30009, 30012, 30018, 30027, 30030, 30036, 30045, 30054, 30060, 30060, 30066, 30075, 30075, 30081, 30081, 30087, 30087, 30114, 30114, 30120, 30126, 30141, 30156, 30159, 50054, 50062, 50066, 50068, 50151, 50228, 50235, 50246, 50249, 50251, 50285, 50299, 50313, 50315, 50334, 50335, 50336, 50337, 50469, 50524, 50528, 50532, 50542, 50547, 50548, 50562, 50677, 50678, 50689, 50701, 50763, 50804, 50819, 51081, 51325, 51742, 51745, 51756, 51777, 51906, 51907, 51911, 51915, 52325, 52334)
+     return(vec.id[1:NROW(x)])
+ }
> 
> ## m.generative <- lvm(c(neo, cau, amy, put, hip)~u)
> ## m.generative <- regression(m.generative, to = endogenous(m.generative), from = "scanner")
> ## m.generative <- regression(m.generative, u ~ age0 + gender + bdnf2 + bmi0 + inj0)
> ## latent(m.generative) <- ~u
> ## covariance(m.generative) <- cau ~ put
> ## covariance(m.generative) <- amy ~ hip
> ## regression(m.generative) <- neo ~ httlpr2
> ## distribution(m.generative, ~scanner+gender+bdnf2+httlpr2) <- lava::binomial.lvm()
> ## butils::object2script(dt.bdnf$cimbi.id)
> generative.coef <- c("u" = -1.015588,
+                      "cau" = 1.17927,
+                      "put" = 1.466333,
+                      "hip" = 0.357585,
+                      "amy" = 0.446344,
+                      "neo~httlpr2" = 0,
+                      "neo~scanner" = 0.49859,
+                      "u~age0" = 0,
+                      "u~bmi0" = 0,
+                      "u~inj0" = -2.116476,
+                      "u~gender" = 0,
+                      "u~bdnf2" = 0,
+                      "cau~u" = 0.392194,
+                      "cau~age0" = -0.004079,
+                      "cau~scanner" = 0.401596,
+                      "put~u" = 0.635584,
+                      "put~scanner" = 0.347252,
+                      "hip~u" = 0.599209,
+                      "hip~scanner" = 0.194701,
+                      "amy~u" = 0.717358,
+                      "amy~scanner" = 0.0362,
+                      "neo~~neo" = 0.000326,
+                      "u~~u" = 0.010595,
+                      "cau~~cau" = 0.011259,
+                      "put~~put" = 0.004755,
+                      "hip~~hip" = 0.011645,
+                      "amy~~amy" = 0.024046,
+                      "cau~~put" = 0.00403,
+                      "hip~~amy" = 0.010866)
> 
> # plot(m.generative)
> 
> ## ** fit model
> ## m.fit0 <- lvm(neo ~ u + httlpr2 + scanner,
> ##              cau ~ u + age0 + scanner,
> ##              put ~ u + scanner,
> ##              hip ~ u + scanner,
> ##              amy ~ u + scanner,
> ##              u ~ age0 + gender + bdnf2 + bmi0 + inj0)
> ## latent(m.fit0) <- ~u
> 
> ## m.fit1 <- m.fit0
> ## covariance(m.fit1) <- cau ~ put
> ## covariance(m.fit1) <- amy ~ hip
> 
> m.fit0 <- lvm(neo ~ u + httlpr2 + scanner,
+               cau ~ u + scanner,
+               put ~ u + scanner,
+               hip ~ u + scanner,
+               amy ~ u + scanner,
+               u ~ age0 + gender + bdnf2 + bmi0 + inj0)
> latent(m.fit0) <- ~u
> 
> m.fit1 <- m.fit0
> covariance(m.fit1) <- cau ~ put
> covariance(m.fit1) <- amy ~ hip
> 
> m.fit2 <- m.fit1
> regression(m.fit2) <- cau ~ u + age0
> 
> ## lava::estimate(m.fit, lava::sim(m.generative, n = 1e4, p = generative.coef))
> ## aa1bbbbabbbbbbbaaabba1
> 
> ## * simulation
> out <- calibrateType1(m.fit2, warmup = list(m.fit0, m.fit1) ,cluster = "cimbi.id", true.coef = generative.coef,
+                       param =  c('u~bdnf2', 'neo~httlpr2', 'u~age0', 'u~bmi0', 'u~gender'),
+                       n = seqN, n.rep = n.rep, 
+                       generative.object = m.generative, generative.coef = generative.coef,
+                       dir.save = path.res, label.file = iter_sim,
+                       bootstrap = FALSE, seed = NULL, trace = 2, control = list(constrain = TRUE))
  Check true coefficients (incorrect convergence of the model) - done 
  Settings: 
  > simulation for n=73
  > model: 
Latent Variable Model
                                                    
  neo ~ u+httlpr2+scanner           gaussian        
  u ~ age0+gender+bdnf2+bmi0+inj0   gaussian, latent
  cau ~ u+scanner+age0              gaussian        
  put ~ u+scanner                   gaussian        
  hip ~ u+scanner                   gaussian        
  amy ~ u+scanner                   gaussian        

Exogenous variables:                         
  httlpr2        gaussian
  scanner        gaussian
  age0           gaussian
  gender         gaussian
  bdnf2          gaussian
  bmi0           gaussian
  inj0           gaussian

  > expected coefficients: 
          u         cau         put         hip         amy neo~httlpr2 
  -1.015588    1.179270    1.466333    0.357585    0.446344    0.000000 
neo~scanner      u~age0      u~bmi0      u~inj0    u~gender     u~bdnf2 
   0.498590    0.000000    0.000000   -2.116476    0.000000    0.000000 
      cau~u    cau~age0 cau~scanner       put~u put~scanner       hip~u 
   0.392194   -0.004079    0.401596    0.635584    0.347252    0.599209 
hip~scanner       amy~u amy~scanner    neo~~neo        u~~u    cau~~cau 
   0.194701    0.717358    0.036200    0.000326    0.010595    0.011259 
   put~~put    hip~~hip    amy~~amy    cau~~put    hip~~amy 
   0.004755    0.011645    0.024046    0.004030    0.010866 
  > null hypotheses: 
    u~bdnf2 neo~httlpr2      u~age0      u~bmi0    u~gender 
          0           0           0           0           0 

 Perform simulation: 
  > export results in  ./Results/illustration-factorModel 
Loading required namespace: pbapply
  > sample size=73
> 
> ## * display
> print(sessionInfo())
R version 3.5.2 (2018-12-20)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: openSUSE 13.1 (Bottle) (x86_64)

Matrix products: default
BLAS: /usr/local/R-3.5.2/lib/libRblas.so
LAPACK: /usr/local/R-3.5.2/lib/libRlapack.so

locale:
 [1] LC_CTYPE=en_GB.UTF-8       LC_NUMERIC=C              
 [3] LC_TIME=en_GB.UTF-8        LC_COLLATE=en_GB.UTF-8    
 [5] LC_MONETARY=en_GB.UTF-8    LC_MESSAGES=en_GB.UTF-8   
 [7] LC_PAPER=en_GB.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=en_GB.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] lavaSearch2_1.5.3 ggplot2_3.1.0     data.table_1.12.0 lava_1.6.5       

loaded via a namespace (and not attached):
 [1] Rcpp_1.0.0        pillar_1.3.1      compiler_3.5.2    plyr_1.8.4       
 [5] bindr_0.1.1       tools_3.5.2       tibble_2.0.1      gtable_0.2.0     
 [9] lattice_0.20-38   pkgconfig_2.0.2   rlang_0.3.1       Matrix_1.2-14    
[13] parallel_3.5.2    mvtnorm_1.0-10    bindrcpp_0.2.2    stringr_1.3.1    
[17] withr_2.1.2       dplyr_0.7.5       grid_3.5.2        tidyselect_0.2.4 
[21] glue_1.2.0        R6_2.3.0          pbapply_1.3-4     survival_2.42-6  
[25] multcomp_1.4-10   TH.data_1.0-10    purrr_0.2.5       reshape2_1.4.3   
[29] magrittr_1.5      scales_1.0.0      codetools_0.2-15  splines_3.5.2    
[33] MASS_7.3-50       assertthat_0.2.0  colorspace_1.4-0  numDeriv_2016.8-1
[37] sandwich_2.5-0    stringi_1.2.2     lazyeval_0.2.1    munsell_0.5.0    
[41] crayon_1.3.4      zoo_1.8-4        
>  
> 
> if(FALSE){
+     ## ** generative model
+ m.generative <- lvm(neo ~ u + httlpr2 + scanner,
+                     cau ~ u + age0 + scanner,
+                     put ~ u + scanner,
+                     hip ~ u + scanner,
+                     amy ~ u + scanner,
+                     u ~ age0 + gender + bdnf2 + bmi0 + inj0)
+ latent(m.generative) <- ~u
+ covariance(m.generative) <- cau ~ put
+ covariance(m.generative) <- amy ~ hip
+ distribution(m.generative, ~scanner) <- lava::binomial.lvm(p=0.6575)
+ distribution(m.generative, ~gender) <- lava::binomial.lvm(p=0.7671)
+ distribution(m.generative, ~bdnf2) <- lava::binomial.lvm(p=0.5753)
+ distribution(m.generative, ~httlpr2) <- lava::binomial.lvm(p=0.5890)
+ distribution(m.generative, ~age0) <- lava::gaussian.lvm(sd=16.09)
+ distribution(m.generative, ~inj0) <- lava::gaussian.lvm(sd=2.479)
+ distribution(m.generative, ~bmi0) <- lava::gaussian.lvm(sd=0.02276)
+ transform(m.generative, cimbi.id~u) <- function(x){
+     vec.id <- c(10753, 11074, 11131, 30006, 30009, 30012, 30018, 30027, 30030, 30036, 30045, 30054, 30060, 30060, 30066, 30075, 30075, 30081, 30081, 30087, 30087, 30114, 30114, 30120, 30126, 30141, 30156, 30159, 50054, 50062, 50066, 50068, 50151, 50228, 50235, 50246, 50249, 50251, 50285, 50299, 50313, 50315, 50334, 50335, 50336, 50337, 50469, 50524, 50528, 50532, 50542, 50547, 50548, 50562, 50677, 50678, 50689, 50701, 50763, 50804, 50819, 51081, 51325, 51742, 51745, 51756, 51777, 51906, 51907, 51911, 51915, 52325, 52334)
+     return(vec.id[1:NROW(x)])
+ }
+ 
+ ## m.generative <- lvm(c(neo, cau, amy, put, hip)~u)
+ ## m.generative <- regression(m.generative, to = endogenous(m.generative), from = "scanner")
+ ## m.generative <- regression(m.generative, u ~ age0 + gender + bdnf2 + bmi0 + inj0)
+ ## latent(m.generative) <- ~u
+ ## covariance(m.generative) <- cau ~ put
+ ## covariance(m.generative) <- amy ~ hip
+ ## regression(m.generative) <- neo ~ httlpr2
+ ## distribution(m.generative, ~scanner+gender+bdnf2+httlpr2) <- lava::binomial.lvm()
+ ## butils::object2script(dt.bdnf$cimbi.id)
+ generative.coef <- c("u" = -1.015588,
+                      "cau" = 1.17927,
+                      "put" = 1.466333,
+                      "hip" = 0.357585,
+                      "amy" = 0.446344,
+                      "neo~httlpr2" = 0,
+                      "neo~scanner" = 0.49859,
+                      "u~age0" = 0,
+                      "u~bmi0" = 0,
+                      "u~inj0" = -2.116476,
+                      "u~gender" = 0,
+                      "u~bdnf2" = 0,
+                      "cau~u" = 0.392194,
+                      "cau~age0" = -0.004079,
+                      "cau~scanner" = 0.401596,
+                      "put~u" = 0.635584,
+                      "put~scanner" = 0.347252,
+                      "hip~u" = 0.599209,
+                      "hip~scanner" = 0.194701,
+                      "amy~u" = 0.717358,
+                      "amy~scanner" = 0.0362,
+                      "neo~~neo" = 0.000326,
+                      "u~~u" = 0.010595,
+                      "cau~~cau" = 0.011259,
+                      "put~~put" = 0.004755,
+                      "hip~~hip" = 0.011645,
+                      "amy~~amy" = 0.024046,
+                      "cau~~put" = 0.00403,
+                      "hip~~amy" = 0.010866)
+ 
+ # plot(m.generative)
+ 
+     ## ** fit model
+     ## m.fit0 <- lvm(neo ~ u + httlpr2 + scanner,
+     ##              cau ~ u + age0 + scanner,
+     ##              put ~ u + scanner,
+     ##              hip ~ u + scanner,
+     ##              amy ~ u + scanner,
+     ##              u ~ age0 + gender + bdnf2 + bmi0 + inj0)
+     ## latent(m.fit0) <- ~u
+ 
+     ## m.fit1 <- m.fit0
+     ## covariance(m.fit1) <- cau ~ put
+     ## covariance(m.fit1) <- amy ~ hip
+ 
+     m.fit0 <- lvm(neo ~ u + httlpr2 + scanner,
+                   cau ~ u + scanner,
+                   put ~ u + scanner,
+                   hip ~ u + scanner,
+                   amy ~ u + scanner,
+                   u ~ age0 + gender + bdnf2 + bmi0 + inj0)
+     latent(m.fit0) <- ~u
+ 
+     m.fit1 <- m.fit0
+     covariance(m.fit1) <- cau ~ put
+     covariance(m.fit1) <- amy ~ hip
+ 
+     m.fit2 <- m.fit1
+     regression(m.fit2) <- cau ~ u + age0
+ 
+     ## lava::estimate(m.fit, lava::sim(m.generative, n = 1e4, p = generative.coef))
+     ## aa1bbbbabbbbbbbaaabba1
+ 
+     }
> 
> proc.time()
    user   system  elapsed 
8916.337   40.530 8971.066 
